library("ggplot2")
library("ggdendro")
library("reshape2")
library("grid")
tsvPath <- '/imppc/labs/lplab/share/marc/insulinomas/processed/hg38/facets/'
tsvFiles <- list.files(tsvPath,
pattern = "_cncf.tsv",
full.names = T)
cnvFacets <- data.frame()
for (tsvFile in tsvFiles){
sampleName <- gsub("_comp_cncf.tsv", "", basename(tsvFile))
facetsOut <- read.table(tsvFile, header = T)
# facetsOut$tcn.em > 2 # cnv gain
# facetsOut$tcn.em < 2 # cnv loss
facetsOutSub <- facetsOut[c('chrom', 'start', 'end', 'tcn.em')]
facetsOutSub$sample <- sampleName
cnvFacets <- rbind(cnvFacets, facetsOutSub)
}
colnames(cnvFacets) <- c('chr', 'start', 'end', 'totalCnv', 'sample')
cnvFacets <- unique(cnvFacets)
cnvFacets$pos <- paste0("chr", cnvFacets$chr, ":", cnvFacets$start, "-", cnvFacets$end)
cnvFacetsH <- reshape2::dcast(cnvFacets, pos ~ sample, value.var="totalCnv")
cnvFacetsH[is.na(cnvFacetsH)] <- 0
rownames(cnvFacetsH) <- cnvFacetsH$pos
cnvFacetsH$pos  <- NULL
cnvFacetsHM <- as.matrix(cnvFacetsH)
# heatmap
pheatmap(cnvFacetsHM)
library("pheatmap")
tsvPath <- '/imppc/labs/lplab/share/marc/insulinomas/processed/hg38/facets/'
tsvFiles <- list.files(tsvPath,
pattern = "_cncf.tsv",
full.names = T)
cnvFacets <- data.frame()
for (tsvFile in tsvFiles){
sampleName <- gsub("_comp_cncf.tsv", "", basename(tsvFile))
facetsOut <- read.table(tsvFile, header = T)
# facetsOut$tcn.em > 2 # cnv gain
# facetsOut$tcn.em < 2 # cnv loss
facetsOutSub <- facetsOut[c('chrom', 'start', 'end', 'tcn.em')]
facetsOutSub$sample <- sampleName
cnvFacets <- rbind(cnvFacets, facetsOutSub)
}
colnames(cnvFacets) <- c('chr', 'start', 'end', 'totalCnv', 'sample')
cnvFacets <- unique(cnvFacets)
cnvFacets$pos <- paste0("chr", cnvFacets$chr, ":", cnvFacets$start, "-", cnvFacets$end)
cnvFacetsH <- reshape2::dcast(cnvFacets, pos ~ sample, value.var="totalCnv")
cnvFacetsH[is.na(cnvFacetsH)] <- 0
rownames(cnvFacetsH) <- cnvFacetsH$pos
cnvFacetsH$pos  <- NULL
cnvFacetsHM <- as.matrix(cnvFacetsH)
anno <- unique(cnvFacets[c('pos', 'chr')])
rownames(anno) <- anno$pos
anno$pos <- NULL
pheatmap(cnvFacetsHM)
pheatmap(cnvFacetsHM,
annotation = anno,
scale = 'row',
cluster_rows = F,
annotation_legend = F)
pheatmap(cnvFacetsHM,scale = 'row')
head8cnvFacetsHM
head(cnvFacetsHM)
pheatmap(cnvFacetsHM, scale = 'row')
sapply(cnvFacetsH, table)
pheatmap(cnvFacetsHM), scale = 'row')
pheatmap(cnvFacetsHM)
pheatmap(cnvFacetsHM, scale = 'row')
cnvFacetsHM[is.na(cnvFacetsHM)]
pheatmap(cnvFacetsH, scale = 'row')
pheatmap(cnvFacetsH)
pheatmap(cnvFacetsH)
head(cnvFacetsH)
?v
?write.csv
write.csv(cnvFacetsH, '~/matrixHeat.csv', quote = F, col.names = T,
row.names = T)
read.csv('~/matrixHeat.csv')
head(cnvFacetsH)
write.csv(cnvFacetsH, '~/matrixHeat.csv', quote = F,
row.names = T)
read.csv('~/matrixHeat.csv')
head(cnvFacetsH)
write.csv(cnvFacetsH, '~/matrixHeat.csv', quote = F, col.names = T,
row.names = T)
write.table(cnvFacetsH, '~/matrixHeat.csv', quote = F, col.names = T,
row.names = T)
read.csv('~/matrixHeat.csv')
read.table('~/matrixHeat.csv')
write.table(cnvFacetsH, '~/matrixHeat.tsv', quote = F, col.names = T,
row.names = T)
read.table('~/matrixHeat.tsv')
write.table(cnvFacetsH, '~/Desktop/matrixHeat.tsv', quote = F, col.names = T,
row.names = T)
pheatmap(cnvFacetsH,
scale = 'row'
annotation = anno,
cluster_rows = F,
annotation_legend = F)
pheatmap(cnvFacetsH,
scale = 'row',
annotation = anno,
cluster_rows = F,
annotation_legend = F)
head(cnvFacetsH)
pheatmap(cnvFacetsH),
scale = 'row',
annotation = anno,
cluster_rows = F,
annotation_legend = F)
pheatmap(cnvFacetsH)
library("ggplot2")
library("ggdendro")
library("reshape2")
library("grid")
library("pheatmap")
tsvPath <- '/imppc/labs/lplab/share/marc/insulinomas/processed/hg38/facets/'
tsvFiles <- list.files(tsvPath,
pattern = "_cncf.tsv",
full.names = T)
cnvFacets <- data.frame()
for (tsvFile in tsvFiles){
sampleName <- gsub("_comp_cncf.tsv", "", basename(tsvFile))
facetsOut <- read.table(tsvFile, header = T)
# facetsOut$tcn.em > 2 # cnv gain
# facetsOut$tcn.em < 2 # cnv loss
facetsOutSub <- facetsOut[c('chrom', 'start', 'end', 'tcn.em')]
facetsOutSub$sample <- sampleName
cnvFacets <- rbind(cnvFacets, facetsOutSub)
}
colnames(cnvFacets) <- c('chr', 'start', 'end', 'totalCnv', 'sample')
cnvFacets <- unique(cnvFacets)
cnvFacets$pos <- paste0("chr", cnvFacets$chr, ":", cnvFacets$start, "-", cnvFacets$end)
cnvFacetsH <- reshape2::dcast(cnvFacets, pos ~ sample, value.var="totalCnv")
cnvFacetsH[is.na(cnvFacetsH)] <- 0
rownames(cnvFacetsH) <- cnvFacetsH$pos
cnvFacetsH$pos  <- NULL
cnvFacetsHM <- as.matrix(cnvFacetsH)
Heatmap(cnvFacetsH, cluster_rows = FALSE) # turn off row clustering
library('ComplexHeatmap')
Heatmap(cnvFacetsH, cluster_rows = FALSE) # turn off row clustering
Heatmap(cnvFacetsHM, cluster_rows = FALSE) # turn off row clustering
?Heatmap
m = matrix(rnorm(1000*10), nr = 1000)
hc = hclust(dist(m))
group = cutree(hc, k = 6)
Heatmap(m, cluster_rows = cluster_within_group(t(m), group),
row_split = 6, border = TRUE) # it would be better if also set row_split
group
length(group)
Heatmap(cnvFacetsHM,
cluster_rows = FALSE,
cluster_rows = cluster_within_group(cnvFacets$chr)
) # turn off row clustering
length(m)
head(group)
cluster_within_group(t(m)
)
m
Heatmap(cnvFacetsHM,
cluster_rows = FALSE,
cluster_rows = cluster_within_group(cnvFacetsHM), cnvFacets$chr
) # turn off row clustering
Heatmap(cnvFacetsHM,
cluster_rows = FALSE,
cluster_rows = cluster_within_group(t(cnvFacetsHM)), cnvFacets$chr
) # turn off row clustering
Heatmap(cnvFacetsHM,
cluster_rows = FALSE,
cluster_rows = cluster_within_group(t(cnvFacetsHM)), cnvFacets$chr
) # turn off row clustering
hc
class(group)
group
Heatmap(cnvFacetsHM,
cluster_rows = FALSE,
) # turn off row clustering
ha = HeatmapAnnotation(foo = cnvFacets$chr)
ha
draw(ht, annotation_legend_list = ha)
ha = HeatmapAnnotation(foo = cnvFacets$chr)
ht <- Heatmap(cnvFacetsHM,
cluster_rows = FALSE
) # turn off row clustering
draw(ht, annotation_legend_list = ha)
dev.off()
ha = HeatmapAnnotation(foo = cnvFacets$chr)
ht <- Heatmap(cnvFacetsHM,
cluster_rows = FALSE
) # turn off row clustering
draw(ht, annotation_legend_list = ha)
dev.off()
draw(ht, annotation_legend_list = ha)
draw(ht, annotation_legend = ha)
Heatmap(cnvFacetsHM,
cluster_rows = FALSE,
right_annotation = ha
)
ha = HeatmapAnnotation(foo = cnvFacets$chr)
ht <- Heatmap(cnvFacetsHM,
cluster_rows = FALSE,
row_annotation = ha
) # turn off row clustering
ht <- Heatmap(cnvFacetsHM,
cluster_rows = FALSE,
row_annotation = ha
) # turn off row clustering
ht <- Heatmap(cnvFacetsHM,
cluster_rows = FALSE,
rowAnnotation = ha
) # turn off row clustering
ha = rowAnnotation(foo = cnvFacets$chr)
ht <- Heatmap(cnvFacetsHM,
cluster_rows = FALSE,
row_annotation = ha
) # turn off row clustering
ht <- Heatmap(cnvFacetsHM,
cluster_rows = FALSE,
right_annotation = ha
) # turn off row clustering
ht
ht <- Heatmap(cnvFacetsHM,
cluster_rows = FALSE,
left_annotation = ha
) # turn off row clustering
Heatmap(cnvFacetsHM,
cluster_rows = FALSE,
left_annotation = ha
)
length(cnvFacets$chr)
length(cnvFacetsHM)
head(cnvFacetsHM)
nrow(cnvFacetsHM)
nrow(cnvFacetsH)
head(cnvFacetsH)
strsplit(rownames(cnvFacetsH))[1]
?strsplit
lapply(rownames(cnvFacetsH), function(x) strsplit(x, ":"))
lapply(rownames(cnvFacetsH), function(x) strsplit(x, ":")[1])
strsplit(x, ":")
x = cnvFacetsH[1]
strsplit(x, ":")
cnvFacetsH
x = cnvFacetsH[1,]
strsplit(x, ":")
x
rownames(cnvFacetsH)
rownames(cnvFacetsH)[1]
x = rownames(cnvFacetsH)[1]
strsplit(x, ":")
strsplit(x, ":")[1]
rownames(cnvFacetsH)
lapply(rownames(cnvFacetsH), function(x) strsplit(x, ":")[1])
lapply(rownames(cnvFacetsH), function(x) unlist(strsplit(x, ":"))[1])
unlist(lapply(rownames(cnvFacetsH), function(x) unlist(strsplit(x, ":"))[1]))
anno <- unlist(lapply(rownames(cnvFacetsH), function(x) unlist(strsplit(x, ":"))[1]))
ha = rowAnnotation(chr = anno)
ht <- Heatmap(cnvFacetsHM,
cluster_rows = FALSE,
left_annotation = ha
) # turn off row clustering
ht
mat_scaled = t(scale(t(cnvFacetsHM)))
ht <- Heatmap(mat_scaled,
cluster_rows = FALSE,
left_annotation = ha,
scale()
) # turn off row clustering
ht <- Heatmap(mat_scaled,
cluster_rows = FALSE,
left_annotation = ha,
scale()
) # turn off row clustering
head(mat_scaled)
cnvFacetsHM[3,]
cnvFacetsH[apply(cnvFacetsH[,-1], 1, function(x) !all(x==0)),]
cnvFacetsH <- cnvFacetsH[apply(cnvFacetsH[,-1], 1, function(x) !all(x==0)),]
cnvFacetsH <- cnvFacetsH[apply(cnvFacetsH[,-1], 1, function(x) !all(x==0)),]
cnvFacetsHM <- as.matrix(cnvFacetsH)
mat_scaled = t(scale(t(cnvFacetsHM)))
ht <- Heatmap(mat_scaled,
cluster_rows = FALSE,
left_annotation = ha,
scale()
) # turn off row clustering
head(mat_scaled)
head8cnvFacetsHM
head(cnvFacetsHM)
sapply(cnvFacets, table)
head(cnvFacets)
sapply(cnvFacetsH, table)
log2(1)
log2(0.5)
library("ggplot2")
library("ggdendro")
library("reshape2")
library("grid")
library("pheatmap")
library('ComplexHeatmap')
tsvPath <- '/imppc/labs/lplab/share/marc/insulinomas/processed/hg38/facets/'
tsvFiles <- list.files(tsvPath,
pattern = "_cncf.tsv",
full.names = T)
cnvFacets <- data.frame()
for (tsvFile in tsvFiles){
sampleName <- gsub("_comp_cncf.tsv", "", basename(tsvFile))
facetsOut <- read.table(tsvFile, header = T)
# facetsOut$tcn.em > 2 # cnv gain
# facetsOut$tcn.em < 2 # cnv loss
facetsOutSub <- facetsOut[c('chrom', 'start', 'end', 'tcn.em')]
facetsOutSub$sample <- sampleName
cnvFacets <- rbind(cnvFacets, facetsOutSub)
}
head(cnvFacets)
colnames(cnvFacets) <- c('chr', 'start', 'end', 'totalCnv', 'sample')
cnvFacets <- unique(cnvFacets)
cnvFacets$pos <- paste0("chr", cnvFacets$chr, ":", cnvFacets$start, "-", cnvFacets$end)
cnvFacets
cnvFacets$pos <- paste0("chr", cnvFacets$chr, ":", cnvFacets$start, "-", cnvFacets$end)
cnvFacetsH <- reshape2::dcast(cnvFacets, pos ~ sample, value.var="totalCnv")
head(cnvFacetsH)
facetsOut
facetsOutSub
head(cnvFacetsH)
colnames(facetsOutSub)
colnames(cnvFacets) <- c("chrom",  "start",  "end",    "tcn.em", "sample")
for (tsvFile in tsvFiles){
sampleName <- gsub("_comp_cncf.tsv", "", basename(tsvFile))
facetsOut <- read.table(tsvFile, header = T)
# facetsOut$tcn.em > 2 # cnv gain
# facetsOut$tcn.em < 2 # cnv loss
facetsOutSub <- facetsOut[c('chrom', 'start', 'end', 'tcn.em')]
facetsOutSub$sample <- sampleName
cnvFacets <- dplyr::inner_join(cnvFacets,facetsOutSub)
#cnvFacets <- rbind(cnvFacets, facetsOutSub)
}
cnvFacets <- data.frame()
colnames(cnvFacets) <- c("chrom",  "start",  "end",    "tcn.em", "sample")
cnvFacets <- data.frame()
cnvFacets
colnames(cnvFacets) <- c("chrom",  "start",  "end",    "tcn.em", "sample")
na.omit(cnvFacets)
library(tidyr)
cnvFacets %>% drop_na()
head(facetsOut)
head(facetsOutSub)
