class(df_lenght)
class(df)
colnames(df)
colnames(df_lenght)
rownames(df_lenght)
rownames(df)
ggplot(df_lenght, aes(x = 'bp')) +
geom_density()
p <- ggplot(df, aes(x=weight)) +
geom_density()
p
ggplot(df_lenght, aes(x = bp)) +
geom_density()
library(cowplot)
ggplot(df_lenght, aes(x = bp)) +
geom_density()
theme_cowplot()
ggplot(df_lenght, aes(x = bp)) +
geom_density()
install.packages(cowplot)
install.packages("cowplot")
install.packages("cowplot")
regions <- read.table('~/Documents/igtp/oncodrive/INS_REs_oncodrive_sub.regions',
header = T)
mean(regions$END - regions$START)
library(ggplot2)
library(cowplot)
df_lenght <- data.frame(regions$END - regions$START)
colnames(df_lenght) <- 'bp'
df_lenght$bp <- as.numeric(df_lenght$bp)
ggplot(df_lenght, aes(x = bp)) +
geom_density()
theme_set(theme_cowplot())
regions <- read.table('~/Documents/igtp/oncodrive/INS_REs_oncodrive_sub.regions',
header = T)
mean(regions$END - regions$START)
library(ggplot2)
library(cowplot)
df_lenght <- data.frame(regions$END - regions$START)
colnames(df_lenght) <- 'bp'
df_lenght$bp <- as.numeric(df_lenght$bp)
ggplot(df_lenght, aes(x = bp)) +
geom_density()
ggplot(df_lenght, aes(x = bp)) +
geom_density() +
scale_x_continuous(breaks = 10)
?seq()
seq(from=1000, to=10000, by=10)
seq(from=1000, to=10000, by=1000)
seq(from=1000, to=10000, by=500)
breaks <- seq(from=1000, to=10000, by=500)
ggplot(df_lenght, aes(x = bp)) +
geom_density() +
scale_x_continuous(breaks = breaks)
breaks <- seq(from=1000, to=30000, by=500)
ggplot(df_lenght, aes(x = bp)) +
geom_density() +
scale_x_continuous(breaks = breaks)
breaks <- seq(from=1000, to=15000, by=1000)
ggplot(df_lenght, aes(x = bp)) +
geom_density() +
scale_x_continuous(breaks = breaks)
df_lenght$bp <- as.numeric(df_lenght$bp)/1000
ggplot(df_lenght, aes(x = bp)) +
geom_density() +
scale_x_continuous(breaks = breaks)
breaks <- seq(from=1000, to=15000, by=1000)
breaks <- seq(from=1000, to=15000, by=1000)
breaks <- seq(from=1, to=15, by=0.5)
ggplot(df_lenght, aes(x = bp)) +
geom_density() +
scale_x_continuous(breaks = breaks)
breaks <- seq(from=1, to=15, by=1)
ggplot(df_lenght, aes(x = bp)) +
geom_density() +
scale_x_continuous(breaks = breaks)
ggplot(df_lenght, aes(x = bp)) +
geom_density() +
scale_x_continuous(name='bp(bk)', breaks = breaks)
bams <- paste0('NET-', seq(80,85), c('_TI', '_BL'), '.bam')
bams
bams <- paste0('NET-', seq(80,85), c('_TI', '_BL'), '.bam')
bams  <- paste0(bams, c('_TI', '_BL'), '.bam')
bams
bams <- paste0('NET-', seq(80,85))
bams  <- paste0(bams, c('_TI', '_BL'), '.bam')
bams
bams_query <- paste0('NET-', seq(80,85))
bams_query
manta_folder = manta_folders[1]
vcf_names <- paste0(vcf_name, c('_BL', 'TI'))
vcf_names
vcf_name <- gsub('_out_manta', '', manta_folder)
vcf_names <- paste0(vcf_name, c('_BL', 'TI'))
filterPass(bcftools = 'bcftools',
vcf,
out_path)
vcf <- "/imppc/labs/lplab/share/marc/insulinomas/processed/hg38/vcf/manta/raw/NET-1_out_manta/results/variants/somaticSV.vcf.gz"
vcf
basename(vcf)
dirname(vcf)
vcf <- "/imppc/labs/lplab/share/marc/insulinomas/processed/hg38/vcf/manta/raw/NET-1_out_manta/results/variants/somaticSV.vcf.gz"
vcf <- dirname(vcf)
vcf <- dirname(vcf)
vcf <- dirname(vcf)
vcf
basename(vcf)
devtools::load_all(".")
devtools::build('/home/msg/Documents/igtp/repos/ucschubgenerator')
devtools::build('/home/msg/Documents/igtp/repos/ucschubgenerator')
devtools::build('/home/msg/Documents/igtp/repos/ucschubgenerator')
devtools::create('/home/msg/Documents/igtp/repos/ucschubgenerator')
data.frame(c('chr14', '100277470', '100277470'))
t(data.frame(c('chr14', '100277470', '100277470')))
colnames(dfPos) <- c('chr','start','end')
dfPos <- t(data.frame(c('chr14', '100277470', '100277470')))
rownames(dfPos) <- seq(1:nrow(dfPos))
colnames(dfPos) <- c('chr','start','end')
dfPos
dfPos
setwd('~/Desktop/')
universe_ins <- read.table('INS_REs.bed')
universe_ins
universe_ins_sub <- read.table('regions.tsv')
universe_ins_sub
universe_ins_sub <- read.table('INS_REs.bed')
universe_ins <- read.table('INS_REs.bed')
ins_regions <- universe_ins[c(1,2,3,4)]
colnames(ins_regions) <- c('CHROMOSOME','START','END','ELEMENT_ID')
ins_regions$SYMBOL <-  paste0('peak_', seq(nrow(ins_regions)))
head(universe_ins)
max(universe_ins$V5)
library(ggplot2)
geom_density()
universe_ins
ggplot(universe_ins, aes(x=as.numeric(V5)) +
ggplot(universe_ins, aes(x=as.numeric(V5))) +
geom_density()
ggplot(universe_ins, aes(x=as.numeric(V5))) +
geom_histogram(aes(y=..density..), colour="black", fill="white")
ggplot(universe_ins, aes(x=as.numeric(V5))) +
geom_histogram(aes(y=..density..), colour="black", fill="white") +
+ scale_x_discrete()
ggplot(universe_ins, aes(x=as.numeric(V5))) +
geom_histogram(aes(y=..density..), colour="black", fill="white") +
+ scale_x_discrete()
ggplot(universe_ins, aes(x=as.numeric(V5))) +
geom_histogram(aes(y=..density..), colour="black", fill="white") +
scale_x_discrete()
ggplot(universe_ins, aes(x=as.numeric(V5))) +
geom_histogram(aes(y=..density..), colour="black", fill="white") +
scale_y_continuous(name='Peak presence',
breaks=1,
limits=c(1,12))
ggplot(universe_ins, aes(x=as.numeric(V5))) +
geom_histogram(aes(y=..density..), colour="black", fill="white") +
scale_x_continuous(name='Peak presence',
breaks=1,
limits=c(1,12))
ggplot(universe_ins, aes(x=as.numeric(V5))) +
geom_histogram(aes(y=..density..), colour="black", fill="white") +
scale_x_continuous(name='Peak presence',
breaks=1,
limits=c(0,12))
ggplot(universe_ins, aes(x=as.numeric(V5))) +
geom_histogram(aes(y=..density..), colour="black", fill="white")
table(universe_ins$V5)
data.frame(table(universe_ins$V5))
colnames(counts_peaks) <- c('Peak count', 'Freq')
counts_peaks <- data.frame(table(universe_ins$V5))
counts_peaks <- data.frame(table(universe_ins$V5))
colnames(counts_peaks) <- c('peak_count', 'freq')
counts_peaks
ggplot(counts_peaks, aes(x=samples_peak, y=freq)) +
geom_bar()
counts_peaks <- data.frame(table(universe_ins$V5))
colnames(counts_peaks) <- c('samples_peak', 'freq')
ggplot(counts_peaks, aes(x=samples_peak, y=freq)) +
geom_bar()
counts_peaks
ggplot(counts_peaks, aes(x=samples_peak, y=as.numeric(freq))) +
geom_bar()
counts_peaks <- data.frame(universe_ins$V5)
counts_peaks
head(counts_peaks)
counts_peaks <- data.frame(universe_ins$V5)
colnames(counts_peaks) <- 'presence_peak'
ggplot(counts_peaks, aes(presence_peak)) +
geom_bar()
ggplot(counts_peaks, aes(x = presence_peak)) +
geom_bar(aes(y = (..count..)/sum(..count..))) +
scale_y_continuous(labels=percent)
counts_peaks <- data.frame(universe_ins$V5)
colnames(counts_peaks) <- 'presence_peak'
ggplot(counts_peaks, aes(x = presence_peak)) +
geom_bar(aes(y = (..count..)/sum(..count..))) +
scale_y_continuous(labels=percent)
ggplot(counts_peaks, aes(x = presence_peak)) +
geom_bar(aes(y = (..count..)/sum(..count..))) +
scale_y_continuous(formatter = 'percent')
ggplot(counts_peaks, aes(x = presence_peak)) +
geom_bar(aes(y = (..count..)/sum(..count..))) +
scale_y_continuous(formatter = 'percent')
ggplot(counts_peaks, aes(x = presence_peak)) +
geom_bar(aes(y = (..count..)/sum(..count..))) +
scale_y_continuous(labels = scales::percent)
ggplot(counts_peaks, aes(x = presence_peak)) +
geom_bar(aes(y = (..count..)/sum(..count..))) +
scale_y_continuous(labels = scales::percent) +
scale_x_discrete()
ggplot(counts_peaks, aes(x = presence_peak)) +
geom_bar(aes(y = (..count..)/sum(..count..))) +
scale_y_continuous(labels = scales::percent) +
scale_x_discrete(breaks=c(1,12))
ggplot(counts_peaks, aes(x = presence_peak)) +
geom_bar(aes(y = (..count..)/sum(..count..))) +
scale_y_continuous(labels = scales::percent) +
scale_x_discrete(limits=c(1,12,1)))
ggplot(counts_peaks, aes(x = presence_peak)) +
geom_bar(aes(y = (..count..)/sum(..count..))) +
scale_y_continuous(labels = scales::percent) +
scale_x_discrete(limits=c(1,12,1)))
ggplot(counts_peaks, aes(x = presence_peak)) +
geom_bar(aes(y = (..count..)/sum(..count..))) +
scale_y_continuous(labels = scales::percent) +
scale_x_discrete(limits=c(1,12,1))
ggplot(counts_peaks, aes(x = presence_peak)) +
geom_bar(aes(y = (..count..)/sum(..count..))) +
scale_y_continuous(labels = scales::percent) +
scale_x_discrete(levels(seq(1,12))))
ggplot(counts_peaks, aes(x = presence_peak)) +
geom_bar(aes(y = (..count..)/sum(..count..))) +
scale_y_continuous(labels = scales::percent) +
scale_x_discrete(levels(seq(1,12)))
ggplot(counts_peaks, aes(x = presence_peak)) +
geom_bar(aes(y = (..count..)/sum(..count..))) +
scale_y_continuous(labels = scales::percent) +
scale_x_discrete(limits=c(1,12,1),
levels(seq(1,12)))
ggplot(counts_peaks, aes(x = presence_peak)) +
geom_bar(aes(y = (..count..)/sum(..count..))) +
scale_y_continuous(labels = scales::percent) +
scale_x_discrete(limits=c(1,12,12),
levels(seq(1,12)))
ggplot(counts_peaks, aes(x = presence_peak)) +
geom_bar(aes(y = (..count..)/sum(..count..))) +
scale_y_continuous(labels = scales::percent) +
scale_x_discrete(limits=c(1,12,12))
ggplot(counts_peaks, aes(x = presence_peak)) +
geom_bar(aes(y = (..count..)/sum(..count..))) +
scale_y_continuous(labels = scales::percent) +
scale_x_discrete(limits=c(1,12,1),
labels=seq(1,12))
seq(1,12)
ggplot(counts_peaks, aes(x = presence_peak)) +
geom_bar(aes(y = (..count..)/sum(..count..))) +
scale_y_continuous(labels = scales::percent) +
scale_x_discrete(labels=seq(1,12))
ggplot(counts_peaks, aes(x = presence_peak)) +
geom_bar(aes(y = (..count..)/sum(..count..))) +
scale_y_continuous(labels = scales::percent) +
scale_x_discrete(name = 'Peak per sample',
labels=seq(1,12))
ggplot(counts_peaks, aes(x = presence_peak)) +
geom_bar(aes(y = (..count..)/sum(..count..))) +
scale_y_continuous(name = 'Density',
labels = scales::percent) +
scale_x_discrete(name = 'Peak per sample',
labels=seq(1,12))
counts_peaks <- data.frame(universe_ins$V5)
colnames(counts_peaks) <- 'presence_peak'
counts_peaks$presence_peak <- as.character(counts_peaks$presence_peak)
ggplot(counts_peaks, aes(x = presence_peak)) +
geom_bar(aes(y = (..count..)/sum(..count..))) +
scale_y_continuous(name = 'Density',
labels = scales::percent) +
scale_x_discrete(name = 'Peak per sample',
labels=seq(1,12))
ggplot(counts_peaks, aes(x = presence_peak)) +
geom_bar(aes(y = (..count..)/sum(..count..))) +
scale_y_continuous(name = 'Density',
labels = scales::percent) +
scale_x_discrete(name = 'Peak per sample')
ggplot(counts_peaks, aes(x = presence_peak)) +
geom_bar(aes(y = (..count..)/sum(..count..))) +
scale_y_continuous(name = 'Density',
labels = scales::percent) +
scale_x_discrete(name = 'Peak per sample',
labels=seq(1,12))
ggplot(counts_peaks, aes(x = presence_peak)) +
geom_bar(aes(y = (..count..)/sum(..count..))) +
scale_y_continuous(name = 'Density',
labels = scales::percent) +
scale_x_discrete(name = 'Peak per sample')
ggplot(counts_peaks, aes(x = presence_peak)) +
geom_bar(aes(y = (..count..)/sum(..count..))) +
scale_y_continuous(name = 'Density',
labels = scales::percent) +
scale_x_discrete(name = 'Peak per sample',
limits = seq(1:12))
library(cowplot)
theme_set(theme_cowplot())
library(ggplot2)
library(cowplot)
theme_set(theme_cowplot())
counts_peaks <- data.frame(universe_ins$V5)
colnames(counts_peaks) <- 'presence_peak'
counts_peaks$presence_peak <- as.character(counts_peaks$presence_peak)
ggplot(counts_peaks, aes(x = presence_peak)) +
geom_bar(aes(y = (..count..)/sum(..count..))) +
scale_y_continuous(name = 'Density',
labels = scales::percent) +
scale_x_discrete(name = 'Peak per sample',
limits = seq(1:12))
library(ggplot2)
library(cowplot)
theme_set(theme_cowplot())
counts_peaks <- data.frame(universe_ins$V5)
colnames(counts_peaks) <- 'presence_peak'
counts_peaks$presence_peak <- as.character(counts_peaks$presence_peak)
ggplot(counts_peaks, aes(x = presence_peak, fill=presence_peak)) +
geom_bar(aes(y = (..count..)/sum(..count..))) +
scale_y_continuous(name = 'Density',
labels = scales::percent) +
scale_x_discrete(name = 'Peak per sample',
limits = seq(1:12))
ggplot(counts_peaks, aes(x = presence_peak, fill=presence_peak)) +
geom_bar(aes(y = (..count..)/sum(..count..))) +
scale_y_continuous(name = 'Density',
labels = scales::percent) +
scale_x_discrete(name = 'Peak per sample',
limits = seq(1:12)) +
theme(legend.box = FALSE)
ggplot(counts_peaks, aes(x = presence_peak, fill=presence_peak)) +
geom_bar(aes(y = (..count..)/sum(..count..))) +
scale_y_continuous(name = 'Density',
labels = scales::percent) +
scale_x_discrete(name = 'Peak per sample',
limits = seq(1:12)) +
theme(legend.position = 'None')
ggplot(counts_peaks, aes(x = presence_peak, fill=presence_peak)) +
geom_bar(aes(y = (..count..)/sum(..count..))) +
scale_y_continuous(name = 'Density',
labels = scales::percent) +
scale_x_discrete(name = 'Peak per sample',
limits = seq(1:12)) +
theme(legend.position = 'None')
head(universe_ins)
universe_ins[universe_ins$V5 >=10,]
ins_regions_9 <- universe_ins[universe_ins$V5 >=9,]
ins_regions_9 <- universe_ins[universe_ins$V5 >=9,]
ins_regions_9 <- ins_regions_9[c(1,2,3,4)]
colnames(ins_regions_9) <- c('CHROMOSOME','START','END','ELEMENT_ID')
ins_regions$SYMBOL <-  paste0('peak_', seq(nrow(ins_regions_9)))
ins_regions_9 <- universe_ins[universe_ins$V5 >=9,]
ins_regions_9 <- ins_regions_9[c(1,2,3,4)]
colnames(ins_regions_9) <- c('CHROMOSOME','START','END','ELEMENT_ID')
ins_regions$SYMBOL <-  paste0('peak_', seq(nrow(ins_regions_9)))
ins_regions_9$SYMBOL <-  paste0('peak_', seq(nrow(ins_regions_9)))
head(ins_regions_9)
paste('oncodriveclustl',
'-i', input,
'-r', regions,
'-o', output_dir,
'-g', genome,
'-c', cores,
'--qqplot',
'-kmer', kmer,
'-sigcalc', sigcalc)
input <- '/imppc/labs/lplab/share/marc/insulinomas/processed/hg38/oncodrive/vcf/strelka2/variants_sub.tsv'
source('~/Documents/igtp/repos/ergWgsTools/tmp/bamTofastqPicard.R')
param <- list(simw = c(21, 31, 41), sw = c(11, 21, 31), cw = c(5, 11, 21))
do.call(expand.grid, param)
df_param <- do.call(expand.grid, param)
class(df_param)
df_param[1]
for (row in 1:nrow(df_param)) {
name = 'CLUST_11p5'
message(row)
}
row
df_param[,1]
df_param
df_param[1,]
for (row in 1:nrow(df_param)) {
name = 'CLUST_11p5'
message(df_param[row,])
}
head()
head(df_param)
for (row in 1:nrow(df_param)) {
values <- df_param[row,]
name = paste0('ft_', values)
message(name)
}
?paste0
for (row in 1:nrow(df_param)) {
values <- df_param[row,]
name = paste0('ft_', paste0(values, collapse = "_"))
message(name)
}
simw <- values[1]
sw <- values[2]
cw <- values[3]
simw
sw
cw
simw <- as.numeric(values[1])
simw
simw <- as.numeric(values[1])
sw <- as.numeric(values[2])
cw <- as.numeric(values[3])
simw
sw
cw
row
df_param[27,]
paste('Rscript /imppc/labs/lplab/share/marc/repos/ergWgsTools/tmp/oncodriveclustl.R',
input,
regions,
output_dir,
sw,
simw,
cw)
input <- '/imppc/labs/lplab/share/marc/insulinomas/processed/hg38/oncodrive/vcf/strelka2/variants_sub.tsv'
regions <- '/imppc/labs/lplab/share/marc/insulinomas/processed/hg38/oncodrive/oncodriveCLUSTL/universe_all/regions.tsv'
main_dir <- '/imppc/labs/lplab/share/marc/insulinomas/processed/hg38/oncodrive/oncodriveCLUSTL/universe_all/fine_tuning'
cores = 4
queue = 'imppcv3'
log = '/imppc/labs/lplab/share/marc/insulinomas/logs'
email = 'clusterigtpmsubirana@gmail.com'
paste('Rscript /imppc/labs/lplab/share/marc/repos/ergWgsTools/tmp/oncodriveclustl.R',
input,
regions,
output_dir,
sw,
simw,
cw)
output_dir <- file.path(main_dir, name)
paste('Rscript /imppc/labs/lplab/share/marc/repos/ergWgsTools/tmp/oncodriveclustl.R',
input,
regions,
output_dir,
sw,
simw,
cw)
sw
values <- df_param[row,]
name = paste0('ft_', paste0(values, collapse = "_"))
simw <- as.numeric(values[1])
sw <- as.numeric(values[2])
cw <- as.numeric(values[3])
output_dir <- file.path(main_dir, name)
paste('Rscript /imppc/labs/lplab/share/marc/repos/ergWgsTools/tmp/oncodriveclustl.R',
input,
regions,
output_dir,
sw,
simw,
cw)
name
values
paste0('export LC_ALL=C.UTF-8\n',
'export LANG=C.UTF-8\n',
'export BGDATA_LOCAL=/imppc/labs/lplab/share/marc/refgen/oncodriveCLUSTL\n',
'source /software/debian-8/general/virtenvs/oncodriveCLUSTL-v1.1.1-py3/bin/activate\n',
paste('Rscript /imppc/labs/lplab/share/marc/repos/ergWgsTools/tmp/oncodriveclustl.R',
input,
regions,
output_dir,
sw,
simw,
cw))
paste('Rscript /imppc/labs/lplab/share/marc/repos/ergWgsTools/tmp/oncodriveclustl.R',
input,
regions,
output_dir,
sw,
simw,
cw)
simw <- as.character(values[1])
simw
values <- df_param[row,]
name = paste0('ft_', paste0(values, collapse = "_"))
simw <- as.character(values[1])
sw <- as.character(values[2])
cw <- as.character(values[3])
output_dir <- file.path(main_dir, name)
dir.create(output_dir,
showWarnings = FALSE)
paste('Rscript /imppc/labs/lplab/share/marc/repos/ergWgsTools/tmp/oncodriveclustl.R',
input,
regions,
output_dir,
sw,
simw,
cw)
input <- '/imppc/labs/lplab/share/marc/insulinomas/processed/hg38/oncodrive/vcf/strelka2/variants_sub.tsv'
regions <- '/imppc/labs/lplab/share/marc/insulinomas/processed/hg38/oncodrive/oncodriveCLUSTL/universe_all/regions.tsv'
main_dir <- '/imppc/labs/lplab/share/marc/insulinomas/processed/hg38/oncodrive/oncodriveCLUSTL/universe_all/fine_tuning'
input
regions
main_dir
cores = 4
queue = 'imppcv3'
log = '/imppc/labs/lplab/share/marc/insulinomas/logs'
read.csv('~/Documents/igtp/insulinomas/processed/hg38/oncodrive/oncodriveCLUSTL/oncodriveCLUSTL/universe_all/fine_tuning/df_ks_scores.csv')
scores <- read.csv('~/Documents/igtp/insulinomas/processed/hg38/oncodrive/oncodriveCLUSTL/oncodriveCLUSTL/universe_all/fine_tuning/df_ks_scores.csv')
head(scores)
scores[order(KS_score)]
scores[order(scores$KS_score)]
scores[order(scores$KS_score),]
