'>', corrected_vcf))
system(paste(perl, file.path(annovar, 'table_annovar.pl'),
corrected_vcf,
humandb,
'-buildver hg38',
'-out', out_vcf,
'-remove',
'-nastring NA',
'-thread', cores,
'-protocol',
#geneanno
paste0('refGene,',
#filter based
'exac03,avsnp150,dbnsfp33a'),
'-operation g,f,f,f'))
vcf <- '/imppc/labs/lplab/share/marc/insulinomas/processed/hg38/vcf/strelka2/strelka2/NET-11_out_strelka2/results/variants/NET-11_out_strelka2_indels_postCalling.vcf'
out_vcf <- gsub('_postCalling.vcf', '_annovarann.vcf')
out_vcf <- gsub('_postCalling.vcf', '_annovarann.vcf', vcf)
annovarAnnotation <- function(vcf,
out_vcf,
cores,
annovar='/imppc/labs/lplab/share/bin/annovar',
humandb='/imppc/labs/lplab/share/bin/annovar/humandb',
perl='perl'){
corrected_vcf <- gsub("\\.vcf", "_corr.vcf", vcf)
system(paste('cat', vcf,
'| grep -v "##"',
'| awk \'{print $1"\t"$2"\t"$2"\t"$4"\t"$5"\t"$6"\t"$7"\t"$8"\t"$9"\t"$10"\t"$11}\'',
'>', corrected_vcf))
# genebased annotation function, which annotates variants to coding and non-coding genes and
# indicates the amino acids that are affected
# annotation using three main databases: Ensembl, RefSeq and UCSC Known Gene
# Filter based annotation includes annotation to certain databases, such as gnomAD,
# dbSNP, and prediction programs to evaluate pathogenicity
system(paste(perl, file.path(annovar, 'table_annovar.pl'),
corrected_vcf,
humandb,
'-buildver hg38',
'-out', out_vcf,
'-remove',
'-nastring NA',
'-thread', cores,
'-protocol',
#geneanno
paste0('refGene,',
#filter based
'exac03,avsnp150,dbnsfp33a'),
'-operation g,f,f,f'))
unlink(corrected_vcf)
}
annovarAnnotation(vcf = vcf,
out_vcf = out_vcf,
cores = 6)
devtools::document()
devtools::document()
devtools::document()
?bwaAlignment
devtools::load_all('/imppc/labs/lplab/share/marc/repos/ergWgsTools')
devtools::load_all()
exists(type_input_file)
# define input type
type_input_file <- if(any(c('fastq', 'fq', 'gz') %in% unlist(strsplit(input_file, ".", fixed = TRUE)))) 'fastq'
input_file = fastq
fastq = "/imppc/labs/lplab/share/marc/insulinomas/raw/fastq/NET-17_BL_R1.fq.gz"
input_file = fastq
# define input type
type_input_file <- if(any(c('fastq', 'fq', 'gz') %in% unlist(strsplit(input_file, ".", fixed = TRUE)))) 'fastq'
type_input_file <- if(any('bam' %in% unlist(strsplit(input_file, ".", fixed = TRUE)))) 'bam'
if(exists(type_input_file)){message('Error: file should be BAM or FASTQ type')}
exists(type_input_file)
?exists
type_input_file
type_input_file
type_input_file
input_file
any(c('fastq', 'fq', 'gz') %in% unlist(strsplit(input_file, ".", fixed = TRUE)))
# define input type
type_input_file <- if(any(c('fastq', 'fq', 'gz') %in% unlist(strsplit(input_file, ".", fixed = TRUE)))) 'fastq'
type_input_file
# define input type
type_input_file <- if(any(c('fastq', 'fq', 'gz') %in% unlist(strsplit(input_file, ".", fixed = TRUE)))) 'fastq'
type_input_file
type_input_file
csv_file <- '/home/msg/Documents/igtp/insulinomas/rename_pnets.csv'
csv <- read.csv(csv_file)
csv
csv <- read.csv(csv_file, header = F)
csv
colnames(csv) <- c('icgc_name', 'erg_name')
i = 1
paste0('rename ',
'\'s/',
csv$icgc_name[i],
'/', csv$erg_name[i],
'/\' ',
path, '/*')
path <- '/home/labs/lplab/msubirana/Desktop/icgc_downloads'
paste0('rename ',
'\'s/',
csv$icgc_name[i],
'/', csv$erg_name[i],
'/\' ',
path, '/*')
path <- '..'
input_file <- '/imppc/labs/lplab/share/marc/insulinomas/raw/fastq/NET-17_BL_R1.fq.gz'
# define fastq type
name_non_ext <- basename(gsub("\\..*", "", (input_file)))
# define fastq type
name_non_ext <- basename(gsub("\\..*", "", (input_file)))
name_non_ext
sm_name <- gsub('_R1', '', name_non_ext)
sm_name
read.table('~/Desktop/INS_REs.bed')
ins <- read.table('~/Desktop/INS_REs.bed')
ins
ins[ins$4 %in% c('enh_75064',
'enh_138259'
)]
ins[ins$4 %in% c('enh_75064',
'enh_138259'),]
ins[ins$V4 %in% c('enh_75064',
'enh_138259'),]
read.table('~/Desktop/hg38_3mer.regions.tsv')
read.table('~/Desktop/hg38_3mer.regions.tsv', header = T)
mer_regions-read.table('~/Desktop/hg38_3mer.regions.tsv', header = T)
mer_regions <- read.table('~/Desktop/hg38_3mer.regions.tsv', header = T)
ins <- read.table('~/Desktop/INS_REs.bed')
ins$V5 <- NULL
colnames(ins) <- c('CHROMOSOME','START','END','ELEMENT_ID')
ins
head(ins)
head(mer_regions)
mer_regions$CHROMOSOME <- paste0('chr', mer_regions$CHROMOSOME)
mer_regions
mer_regions$CHROMOSOME[1]
ins[ins$CHROMOSOME == mer_regions$CHROMOSOME[1],]
ins[(ins$CHROMOSOME == mer_regions$CHROMOSOME[1]) & (ins$END > mer_regions$END),]
mer_regions$END
ins[(ins$CHROMOSOME == mer_regions$CHROMOSOME[1]) & (ins$END > mer_regions$END[1]),]
for(i in nrow(mer_regions)){
ins[(ins$CHROMOSOME == mer_regions$CHROMOSOME[1]) & (ins$END > mer_regions$END[1]),]
}
for(i in nrow(mer_regions)){
message(ins[(ins$CHROMOSOME == mer_regions$CHROMOSOME[1]) & (ins$END > mer_regions$END[1]),])
}
nrow(mer_regions)
seq_len(nrow(mer_regions)
)
for(i in seq_len(nrow(mer_regions))){
message(ins[(ins$CHROMOSOME == mer_regions$CHROMOSOME[1]) & (ins$END > mer_regions$END[1]),])
}
ins[(ins$CHROMOSOME == mer_regions$CHROMOSOME[1]) & (ins$END > mer_regions$END[1]),]
ins[(ins$CHROMOSOME == mer_regions$CHROMOSOME[i]) & (ins$END > mer_regions$END[i]),]
ins[(ins$CHROMOSOME == mer_regions$CHROMOSOME[i]) & (ins$END > mer_regions$END[i]),]
for(i in seq_len(nrow(mer_regions))){
message(ins[(ins$CHROMOSOME == mer_regions$CHROMOSOME[i]) & (ins$END > mer_regions$END[i]),])
}
out_ranges <- data.frame()
out_ranges <- data.frame()
for(i in seq_len(nrow(mer_regions))){
tmp_df <- ins[(ins$CHROMOSOME == mer_regions$CHROMOSOME[i]) & (ins$END > mer_regions$END[i]),])
out_ranges <- rbind(out_ranges, tmp_df)
}
for(i in seq_len(nrow(mer_regions))){
tmp_df <- ins[(ins$CHROMOSOME == mer_regions$CHROMOSOME[i]) & (ins$END > mer_regions$END[i]),]
out_ranges <- rbind(out_ranges, tmp_df)
}
out_ranges
ins
max(ins$END)
mer_regions
for(i in seq_len(nrow(mer_regions))){
tmp_max <- max(ins[(ins$CHROMOSOME == mer_regions$CHROMOSOME[i])])
message(mer_regions$CHROMOSOME[i])
message(tmp_max)
}
for(i in seq_len(nrow(mer_regions))){
tmp_max <- max(ins[(ins$CHROMOSOME == mer_regions$CHROMOSOME[i]),])
message(mer_regions$CHROMOSOME[i])
message(tmp_max)
}
ins[(ins$CHROMOSOME == mer_regions$CHROMOSOME[i])
]
ins[ins$CHROMOSOME == mer_regions$CHROMOSOME[i],]
for(i in seq_len(nrow(mer_regions))){
tmp_max <- max(ins[ins$CHROMOSOME == mer_regions$CHROMOSOME[i],])
message(mer_regions$CHROMOSOME[i])
message(tmp_max)
}
max(ins[ins$CHROMOSOME == mer_regions$CHROMOSOME[i],])
ins[ins$CHROMOSOME == mer_regions$CHROMOSOME[i],]
max(ins$END[ins$CHROMOSOME == mer_regions$CHROMOSOME[i]])
for(i in seq_len(nrow(mer_regions))){
tmp_max <- max(ins$END[ins$CHROMOSOME == mer_regions$CHROMOSOME[i]])
message(mer_regions$CHROMOSOME[i])
message(tmp_max)
}
data.frame(c(mer_regions$CHROMOSOME[i],tmp_max))
t(data.frame(c(mer_regions$CHROMOSOME[i],tmp_max)))
max_end <- data.frame()
for(i in seq_len(nrow(mer_regions))){
tmp_max <- max(ins$END[ins$CHROMOSOME == mer_regions$CHROMOSOME[i],])
tmp_df <- t(data.frame(c(mer_regions$CHROMOSOME[i],tmp_max)))
max_end <- data.frame(max_end, tmp_df)
}
max_end
tmp_df
tmp_df <- t(data.frame(c(mer_regions$CHROMOSOME[i],tmp_max)))
tmp_df
max_end <- data.frame(max_end, tmp_df)
max_end <- data.frame()
max_end <- rbind(max_end, tmp_df)
max_end <- data.frame()
for(i in seq_len(nrow(mer_regions))){
tmp_max <- max(ins$END[ins$CHROMOSOME == mer_regions$CHROMOSOME[i],])
tmp_df <- t(data.frame(c(mer_regions$CHROMOSOME[i],tmp_max)))
max_end <- rbind(max_end, tmp_df)
}
max_end <- rbind(max_end, tmp_df)
max_end
i=2
tmp_max <- max(ins$END[ins$CHROMOSOME == mer_regions$CHROMOSOME[i],])
mer_regions$CHROMOSOME[i]
max(ins$END[ins$CHROMOSOME == mer_regions$CHROMOSOME[i]])
max_end <- data.frame()
for(i in seq_len(nrow(mer_regions))){
tmp_max <- max(ins$END[ins$CHROMOSOME == mer_regions$CHROMOSOME[i]])
tmp_df <- t(data.frame(c(mer_regions$CHROMOSOME[i],tmp_max)))
max_end <- rbind(max_end, tmp_df)
}
max_end
row.names(max_end) <- seq_len(nrow(max_end))
colnames(max_end) <- c('CHROMOSOME', 'END')
max_end
colnames(max_end) <- c('CHROMOSOME', 'END_SAMPLES')
dplyr::left_join(mer_regions, max_end)
mer_regions$CHROMOSOME <- as.character(mer_regions$CHROMOSOME)
dplyr::left_join(mer_regions, max_end)
max_end$CHROMOSOME <- as.character(max_end$CHROMOSOME)
max_end$END_SAMPLES <- as.numeric(max_end$END_SAMPLES)
max_end
max_end <- data.frame()
for(i in seq_len(nrow(mer_regions))){
tmp_max <- max(ins$END[ins$CHROMOSOME == mer_regions$CHROMOSOME[i]])
tmp_df <- t(data.frame(c(mer_regions$CHROMOSOME[i],tmp_max)))
max_end <- rbind(max_end, tmp_df)
}
row.names(max_end) <- seq_len(nrow(max_end))
colnames(max_end) <- c('CHROMOSOME', 'END_SAMPLES')
max_end$CHROMOSOME <- as.character(max_end$CHROMOSOME)
max_end$END_SAMPLES <- as.character(max_end$END_SAMPLES)
max_end
mer_regions$END <- as.character(mer_regions$END)
dplyr::left_join(mer_regions, max_end)
regions_merged <- dplyr::left_join(mer_regions, max_end)
regions_merged[regions_merged$END_SAMPLES > regions_merged$END]
ins
for(i in seq_len(nrow(mer_regions))){
tmp_min <- min(ins$END[ins$CHROMOSOME == mer_regions$CHROMOSOME[i]])
tmp_df <- t(data.frame(c(mer_regions$CHROMOSOME[i],tmp_min)))
min_end <- rbind(min_end, tmp_df)
}
min_end <- data.frame()
for(i in seq_len(nrow(mer_regions))){
tmp_min <- min(ins$END[ins$CHROMOSOME == mer_regions$CHROMOSOME[i]])
tmp_df <- t(data.frame(c(mer_regions$CHROMOSOME[i],tmp_min)))
min_end <- rbind(min_end, tmp_df)
}
min_end
row.names(min_end) <- seq_len(nrow(max_end))
colnames(min_end) <- c('CHROMOSOME', 'END_SAMPLES')
min_end
bams <- list.files(bam_path,
pattern = '^NET-5')
vcfs_strelka_path <- '/imppc/labs/lplab/share/marc/insulinomas/processed/hg38/vcf/strelka2/NET-45_out_strelka2/results/variants'
strsplit(vcfs_strelka_path, "/")
grep('NET-', strsplit(vcfs_strelka_path, "/"))
grep('^NET-', strsplit(vcfs_strelka_path, "/"))
grepl('^NET-', strsplit(vcfs_strelka_path, "/"))
strsplit(vcfs_strelka_path, "/")
grepl('^NET-*', strsplit(vcfs_strelka_path, "/"))
grep('^NET-*', strsplit(vcfs_strelka_path, "/"))
grep('^NET-$', strsplit(vcfs_strelka_path, "/"))
grep('^NET', strsplit(vcfs_strelka_path, "/"))
grepl('^NET', strsplit(vcfs_strelka_path, "/"))
grep('^NET', strsplit(vcfs_strelka_path, "/"))
startsWith('^NET', strsplit(vcfs_strelka_path, "/"))
startsWith('^NET', strsplit(vcfs_strelka_path, "/")[1])
startsWith('NET', strsplit(vcfs_strelka_path, "/")[1])
strsplit(vcfs_strelka_path, "/")[1]
grep('^NET', unlist(strsplit(vcfs_strelka_path, "/")))
split_vcfs_strelka_path <- unlist(strsplit(vcfs_strelka_path, "/"))
vcfs_strelka_path <- '/imppc/labs/lplab/share/marc/insulinomas/processed/hg38/vcf/strelka2/NET-45_out_strelka2/results/variants'
split_vcfs_strelka_path <- unlist(strsplit(vcfs_strelka_path, "/"))
split_vcfs_strelka_path[grep('^NET', split_vcfs_strelka_path)]
sample_name <- gsub('_out_strelka2', '', sample_name)
vcfs_strelka_path <- '/imppc/labs/lplab/share/marc/insulinomas/processed/hg38/vcf/strelka2/NET-45_out_strelka2/results/variants'
split_vcfs_strelka_path <- unlist(strsplit(vcfs_strelka_path, "/"))
sample_name <- split_vcfs_strelka_path[grep('^NET', split_vcfs_strelka_path)]
sample_name <- gsub('_out_strelka2', '', sample_name)
sample_name
read.table('~/Desktop/INS_REs_oncodrive.regions')
regions <- read.table('~/Documents/igtp/oncodrive/INS_REs_oncodrive_sub.regions')
regions
regions <- read.table('~/Documents/igtp/oncodrive/INS_REs_oncodrive_sub.regions',
header = T)
head(regions)
regions$END - regions$START
mean(regions$END - regions$START)
density(regions$END - regions$START)
plot(density(regions$END - regions$START))
library(ggplot2)
df(gions$END - regions$START)
df(regions$END - regions$START)
data.frame(regions$END - regions$START)
lenght <- data.frame(regions$END - regions$START)
lenght
df_lenght <- data.frame(regions$END - regions$START)
head(df_lenght)
colnames(df_lenght) <- 'bp'
library(ggplot2)
library(cowplot)
theme_set(theme_cowplot())
ggplot(df_lenght, aes(x = 'bp'))+
geom_density()
ggplot(df_lenght, aes(x = 'bp')) +
geom_density()
df_lenght
head(df_lenght)
ggplot(df_lenght, aes(x = 'bp')) +
geom_density()
dev.off()
install.packages("ggplot2")
install.packages("ggplot2")
regions <- read.table('~/Documents/igtp/oncodrive/INS_REs_oncodrive_sub.regions',
header = T)
mean(regions$END - regions$START)
library(ggplot2)
library(cowplot)
df_lenght <- data.frame(regions$END - regions$START)
colnames(df_lenght) <- 'bp'
ggplot(df_lenght, aes(x = 'bp')) +
geom_density()
df_lenght$bp <- as.numeric(df_lenght$bp)
ggplot(df_lenght, aes(x = 'bp')) +
geom_density()
ggplot(df_lenght, aes(x = 'bp')) +
geom_density())
ggplot(df_lenght, aes(x = 'bp')) +
geom_density()
class(df_lenght$bp)
regions <- read.table('~/Documents/igtp/oncodrive/INS_REs_oncodrive_sub.regions',
header = T)
mean(regions$END - regions$START)
library(ggplot2)
library(cowplot)
df_lenght <- data.frame(regions$END - regions$START)
colnames(df_lenght) <- 'bp'
df_lenght$bp <- as.numeric(df_lenght$bp)
ggplot(df_lenght, aes(x = 'bp')) +
geom_density()
library(ggplot2)
set.seed(1234)
dfGamma = data.frame(nu75 = rgamma(100, 0.75),
nu1 = rgamma(100, 1),
nu2 = rgamma(100, 2))
dfGamma = stack(dfGamma)
p <- ggplot(dfGamma, aes(x = values)) +
stat_density(aes(group = ind, color = ind),position="identity",geom="line")
fig <- ggplotly(p)
fig
library(ggplot2)
set.seed(1234)
dfGamma = data.frame(nu75 = rgamma(100, 0.75),
nu1 = rgamma(100, 1),
nu2 = rgamma(100, 2))
dfGamma = stack(dfGamma)
p <- ggplot(dfGamma, aes(x = values)) +
stat_density(aes(group = ind, color = ind),position="identity",geom="line")
p
ggplot(df_lenght, aes(x = 'bp')) +
stat_density()
ggplot(df_lenght, aes(y = 'bp')) +
geom_density()
set.seed(1234)
df <- data.frame(
sex=factor(rep(c("F", "M"), each=200)),
weight=round(c(rnorm(200, mean=55, sd=5),
rnorm(200, mean=65, sd=5)))
)
head(df)
p <- ggplot(df, aes(x=weight)) +
geom_density()
p
class(df$weight)
set.seed(1234)
df <- data.frame( weight=round(c(rnorm(200, mean=55, sd=5),
rnorm(200, mean=65, sd=5)))
)
head(df)
p <- ggplot(df, aes(x=weight)) +
geom_density()
p
head8df_lenght
head(df_lenght)
class(df_lenght)
class(df)
colnames(df)
colnames(df_lenght)
rownames(df_lenght)
rownames(df)
ggplot(df_lenght, aes(x = 'bp')) +
geom_density()
p <- ggplot(df, aes(x=weight)) +
geom_density()
p
ggplot(df_lenght, aes(x = bp)) +
geom_density()
library(cowplot)
ggplot(df_lenght, aes(x = bp)) +
geom_density()
theme_cowplot()
ggplot(df_lenght, aes(x = bp)) +
geom_density()
install.packages(cowplot)
install.packages("cowplot")
install.packages("cowplot")
regions <- read.table('~/Documents/igtp/oncodrive/INS_REs_oncodrive_sub.regions',
header = T)
mean(regions$END - regions$START)
library(ggplot2)
library(cowplot)
df_lenght <- data.frame(regions$END - regions$START)
colnames(df_lenght) <- 'bp'
df_lenght$bp <- as.numeric(df_lenght$bp)
ggplot(df_lenght, aes(x = bp)) +
geom_density()
theme_set(theme_cowplot())
regions <- read.table('~/Documents/igtp/oncodrive/INS_REs_oncodrive_sub.regions',
header = T)
mean(regions$END - regions$START)
library(ggplot2)
library(cowplot)
df_lenght <- data.frame(regions$END - regions$START)
colnames(df_lenght) <- 'bp'
df_lenght$bp <- as.numeric(df_lenght$bp)
ggplot(df_lenght, aes(x = bp)) +
geom_density()
ggplot(df_lenght, aes(x = bp)) +
geom_density() +
scale_x_continuous(breaks = 10)
?seq()
seq(from=1000, to=10000, by=10)
seq(from=1000, to=10000, by=1000)
seq(from=1000, to=10000, by=500)
breaks <- seq(from=1000, to=10000, by=500)
ggplot(df_lenght, aes(x = bp)) +
geom_density() +
scale_x_continuous(breaks = breaks)
breaks <- seq(from=1000, to=30000, by=500)
ggplot(df_lenght, aes(x = bp)) +
geom_density() +
scale_x_continuous(breaks = breaks)
breaks <- seq(from=1000, to=15000, by=1000)
ggplot(df_lenght, aes(x = bp)) +
geom_density() +
scale_x_continuous(breaks = breaks)
df_lenght$bp <- as.numeric(df_lenght$bp)/1000
ggplot(df_lenght, aes(x = bp)) +
geom_density() +
scale_x_continuous(breaks = breaks)
breaks <- seq(from=1000, to=15000, by=1000)
breaks <- seq(from=1000, to=15000, by=1000)
breaks <- seq(from=1, to=15, by=0.5)
ggplot(df_lenght, aes(x = bp)) +
geom_density() +
scale_x_continuous(breaks = breaks)
breaks <- seq(from=1, to=15, by=1)
ggplot(df_lenght, aes(x = bp)) +
geom_density() +
scale_x_continuous(breaks = breaks)
ggplot(df_lenght, aes(x = bp)) +
geom_density() +
scale_x_continuous(name='bp(bk)', breaks = breaks)
bams <- paste0('NET-', seq(80,85), c('_TI', '_BL'), '.bam')
bams
bams <- paste0('NET-', seq(80,85), c('_TI', '_BL'), '.bam')
bams  <- paste0(bams, c('_TI', '_BL'), '.bam')
bams
bams <- paste0('NET-', seq(80,85))
bams  <- paste0(bams, c('_TI', '_BL'), '.bam')
bams
bams_query <- paste0('NET-', seq(80,85))
bams_query
manta_folder = manta_folders[1]
vcf_names <- paste0(vcf_name, c('_BL', 'TI'))
vcf_names
vcf_name <- gsub('_out_manta', '', manta_folder)
vcf_names <- paste0(vcf_name, c('_BL', 'TI'))
filterPass(bcftools = 'bcftools',
vcf,
out_path)
vcf <- "/imppc/labs/lplab/share/marc/insulinomas/processed/hg38/vcf/manta/raw/NET-1_out_manta/results/variants/somaticSV.vcf.gz"
vcf
basename(vcf)
dirname(vcf)
vcf <- "/imppc/labs/lplab/share/marc/insulinomas/processed/hg38/vcf/manta/raw/NET-1_out_manta/results/variants/somaticSV.vcf.gz"
vcf <- dirname(vcf)
vcf <- dirname(vcf)
vcf <- dirname(vcf)
vcf
basename(vcf)
